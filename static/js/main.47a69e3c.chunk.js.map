{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","state","filter","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","Container","styled","div","Form","form","Label","label","Input","input","Button","button","connect","dispatch","onSubmit","value","useState","setName","setNumber","handleChange","e","currentTarget","resetForm","preventDefault","find","contact","toLowerCase","toast","error","type","pattern","title","required","onChange","event","target","Item","li","getFilteredContacts","allContacts","normalizedFilter","includes","onDeleteContact","contactId","map","onClick","PhonebookTitle","h1","ContactsTitle","h2","App","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.47a69e3c.chunk.js","sourcesContent":["import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 320px;\r\n  height: auto;\r\n  padding: 20px 30px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 216px;\r\n  margin-top: 20px;\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(0, 0, 0, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from 'redux/contacts/contacts-actions'\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Container, Form, Label, Input, Button } from './ContactForm.styled';\r\n\r\nconst ContactForm = ({ onSubmit, contacts }) => {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const duplicateName = contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n        if (duplicateName) {\r\n            toast.error(`${name} is already in contacts`);\r\n            resetForm();\r\n            return;\r\n        }\r\n\r\n        onSubmit(name, number);\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Label>\r\n                    Name\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                    Number\r\n                    <Input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </Label>\r\n                <Button type=\"submit\">Add contact</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ contacts: state.contacts.items });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, value) => dispatch(addContact(name, value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;","import { connect } from 'react-redux';\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\n\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <Label>\r\n            Filter contacts by name\r\n            <Input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChange} />\r\n        </Label>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: event => dispatch(changeFilter(event.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n  width: 360px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(114, 81, 81, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import { connect } from 'react-redux';\r\nimport { deleteContact } from 'redux/contacts/contacts-actions';\r\n\r\nimport { Item, Button } from './ContactList.styled';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {contacts.map(({ id, name, number }) => {\r\n                    return (\r\n                        <Item key={id}>\r\n                            {name}: {number}\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={() => onDeleteContact(id)}\r\n                            >Delete</Button>\r\n                        </Item>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter));\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n    contacts: getFilteredContacts(items, filter),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: contactId => dispatch(deleteContact(contactId)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 50px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const PhonebookTitle = styled.h1`\r\n  font-size: 28px;\r\n`;\r\n\r\nexport const ContactsTitle = styled.h2`\r\n`;","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\n\r\nimport { Container, PhonebookTitle, ContactsTitle } from './App.styled';\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <PhonebookTitle>Phonebook</PhonebookTitle>\r\n      <ContactForm />\r\n\r\n      <ContactsTitle>Contacts</ContactsTitle>\r\n      <Filter />\r\n      <ContactList />\r\n\r\n      <ToastContainer autoClose={2000} />\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from 'redux/store';\r\nimport { App } from './components/App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
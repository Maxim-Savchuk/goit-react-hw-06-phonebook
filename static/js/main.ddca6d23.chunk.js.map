{"version":3,"sources":["redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["types","itemsLS","JSON","parse","window","localStorage","getItem","contactsReducer","combineReducers","items","state","type","payload","filter","id","rootReducers","contacts","store","createStore","composeWithDevTools","Container","styled","div","Form","form","Label","label","Input","input","Button","button","connect","setItem","stringify","dispatch","onSubmit","name","value","number","shortid","generate","addContact","useState","setName","setNumber","handleChange","e","currentTarget","resetForm","preventDefault","find","contact","toLowerCase","toast","error","pattern","title","required","onChange","event","target","Item","li","getFilteredContacts","allContacts","normalizedFilter","includes","onDeleteContact","contactId","deleteContact","map","onClick","PhonebookTitle","h1","ContactsTitle","h2","App","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAAaA,EACN,eADMA,EAEH,kBAFGA,EAGI,wBCAXC,EAAO,UAAGC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA1C,QAA0D,GAwB1DC,EAAkBC,0BAAgB,CAC7CC,MAvBY,WAAyC,IAAxCC,EAAuC,uDAA/BT,EAA+B,yCAApBU,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtC,OAAQD,GACN,KAAKX,EACH,MAAM,CAAEY,GAAR,mBAAoBF,IAEtB,KAAKV,EACH,OAAOU,EAAMG,QAAO,qBAAGC,KAAgBF,KAEzC,QACE,OAAOF,IAeXG,OAXa,WAAoC,IAAnCH,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClC,OAAQD,IACDX,EACIY,EAEAF,KCnBPK,EAAeP,0BAAgB,CACnCQ,SAAUT,IAGCU,EAAQC,sBAAYH,EAAcI,iC,8DCNlCC,EAAYC,IAAOC,IAAV,uIAQTC,EAAOF,IAAOG,KAAV,yEAKJC,EAAQJ,IAAOK,MAAV,kHAOLC,EAAQN,IAAOO,MAAV,mQAcLC,EAASR,IAAOS,OAAV,uX,OCwDJC,eAZS,SAACrB,GAGrB,OAFAL,aAAa2B,QAAQ,WAAY9B,KAAK+B,UAAUvB,EAAMM,SAASP,QAExD,CACHO,SAAUN,EAAMM,SAASP,UAIN,SAAAyB,GAAQ,MAAK,CACpCC,SAAU,SAACC,EAAMC,GAAP,OAAiBH,ECtFZ,SAACE,EAAME,GAAP,MAAmB,CACpC3B,KAAMX,EACNY,QAAS,CACPE,GAAIyB,IAAQC,WACZJ,OACAE,WDiFoCG,CAAWL,EAAMC,QAG1CN,EArFK,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,SAAUnB,EAAe,EAAfA,SAC7B,EAAwB0B,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOJ,EAAP,KAAeM,EAAf,KAEMC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACJ,IAAK,OACDO,EAAQN,GACR,MACJ,IAAK,SACDO,EAAUP,GACV,MACJ,QACI,SAoBNW,EAAY,WACdL,EAAQ,IACRC,EAAU,KAGd,OACI,cAACxB,EAAD,UACI,eAACG,EAAD,CAAMY,SAvBO,SAAAW,GAMjB,GALAA,EAAEG,iBAEoBjC,EAASkC,MAC3B,SAAAC,GAAO,OAAIA,EAAQf,KAAKgB,gBAAkBhB,EAAKgB,iBAK/C,OAFAC,IAAMC,MAAN,UAAelB,EAAf,iCACAY,IAIJb,EAASC,EAAME,GACfU,KAUI,UACI,eAACvB,EAAD,kBAEI,cAACE,EAAD,CACIhB,KAAK,OACLyB,KAAK,OACLC,MAAOD,EACPmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUb,OAGlB,eAACpB,EAAD,oBAEI,cAACE,EAAD,CACIhB,KAAK,MACLyB,KAAK,SACLC,MAAOC,EACPiB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUb,OAGlB,cAAChB,EAAD,CAAQlB,KAAK,SAAb,iCExEHc,EAAQJ,IAAOK,MAAV,kHAOLC,EAAQN,IAAOO,MAAV,mQCgBHG,eARS,SAACrB,GAAD,MAAY,CAChC2B,MAAO3B,EAAMM,SAASH,WAGC,SAAAqB,GAAQ,MAAK,CACpCwB,SAAU,SAAAC,GAAK,OAAIzB,GFLFG,EEKwBsB,EAAMC,OAAOvB,MFL3B,CAC7B1B,KAAMX,EACNY,QAASyB,KAFU,IAAAA,MEQNN,EApBA,SAAC,GAAyB,IAAvBM,EAAsB,EAAtBA,MAAOqB,EAAe,EAAfA,SACrB,OACI,eAAC,EAAD,qCAEI,cAAC,EAAD,CACI/C,KAAK,OACL0B,MAAOA,EACPqB,SAAUA,UCVbG,EAAOxC,IAAOyC,GAAV,2PAaJjC,EAASR,IAAOS,OAAV,qVCUbiC,EAAsB,SAACC,EAAanD,GACtC,IAAMoD,EAAmBpD,EAAOuC,cAChC,OAAOY,EAAYnD,QAAO,SAAAsC,GAAO,OAC7BA,EAAQf,KAAKgB,cAAcc,SAASD,OAW7BlC,eARS,SAAC,GAAD,QAAGf,SAAYP,EAAf,EAAeA,MAAOI,EAAtB,EAAsBA,OAAtB,MAAsC,CAC1DG,SAAU+C,EAAoBtD,EAAOI,OAGd,SAAAqB,GAAQ,MAAK,CACpCiC,gBAAiB,SAAAC,GAAS,OAAIlC,EJxBZ,SAAAkC,GAAS,MAAK,CAClCzD,KAAMX,EACNY,QAASwD,GIsBgCC,CAAcD,QAG1CrC,EAlCK,SAAC,GAAmC,IAAjCf,EAAgC,EAAhCA,SAAUmD,EAAsB,EAAtBA,gBAC7B,OACI,8BACI,6BACKnD,EAASsD,KAAI,YAA2B,IAAxBxD,EAAuB,EAAvBA,GAAIsB,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACvB,OACI,eAACuB,EAAD,WACKzB,EADL,KACaE,EACT,cAAC,EAAD,CACI3B,KAAK,SACL4D,QAAS,kBAAMJ,EAAgBrD,IAFnC,sBAFOA,aCTtBM,EAAYC,IAAOC,IAAV,wFAMTkD,EAAiBnD,IAAOoD,GAAV,gDAIdC,EAAgBrD,IAAOsD,GAAV,4BCJbC,GAAM,WAEjB,OACE,eAAC,EAAD,WACE,cAACJ,EAAD,wBACA,cAAC,EAAD,IAEA,cAACE,EAAD,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,IAAD,CAAgBG,UAAW,U,MCXjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/D,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGJgE,SAASC,eAAe,W","file":"static/js/main.ddca6d23.chunk.js","sourcesContent":["export const types = {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  CHANGE_FILTER: 'contacts/changeFilter',\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport {types} from './contacts-types';\r\n\r\nconst itemsLS = JSON.parse(window.localStorage.getItem('contacts')) ?? [];\r\n\r\nconst items = (state = itemsLS, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [payload, ...state];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { contactsReducer } from './contacts/contacts-reducer';\r\n\r\nconst rootReducers = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducers, composeWithDevTools());\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 320px;\r\n  height: auto;\r\n  padding: 20px 30px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 216px;\r\n  margin-top: 20px;\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(0, 0, 0, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from 'redux/contacts/contacts-actions'\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Container, Form, Label, Input, Button } from './ContactForm.styled';\r\n\r\nconst ContactForm = ({ onSubmit, contacts }) => {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const duplicateName = contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n        if (duplicateName) {\r\n            toast.error(`${name} is already in contacts`);\r\n            resetForm();\r\n            return;\r\n        }\r\n\r\n        onSubmit(name, number);\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Label>\r\n                    Name\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                    Number\r\n                    <Input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </Label>\r\n                <Button type=\"submit\">Add contact</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    localStorage.setItem('contacts', JSON.stringify(state.contacts.items));\r\n\r\n    return {\r\n        contacts: state.contacts.items,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, value) => dispatch(addContact(name, value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import shortid from 'shortid';\r\nimport { types } from './contacts-types';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;","import { connect } from 'react-redux';\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\n\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <Label>\r\n            Filter contacts by name\r\n            <Input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChange} />\r\n        </Label>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: event => dispatch(changeFilter(event.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n  width: 360px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(114, 81, 81, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import { connect } from 'react-redux';\r\nimport { deleteContact } from 'redux/contacts/contacts-actions';\r\n\r\nimport { Item, Button } from './ContactList.styled';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {contacts.map(({ id, name, number }) => {\r\n                    return (\r\n                        <Item key={id}>\r\n                            {name}: {number}\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={() => onDeleteContact(id)}\r\n                            >Delete</Button>\r\n                        </Item>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter));\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n    contacts: getFilteredContacts(items, filter),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: contactId => dispatch(deleteContact(contactId)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 50px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const PhonebookTitle = styled.h1`\r\n  font-size: 28px;\r\n`;\r\n\r\nexport const ContactsTitle = styled.h2`\r\n`;","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\n\r\nimport { Container, PhonebookTitle, ContactsTitle } from './App.styled';\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <PhonebookTitle>Phonebook</PhonebookTitle>\r\n      <ContactForm />\r\n\r\n      <ContactsTitle>Contacts</ContactsTitle>\r\n      <Filter />\r\n      <ContactList />\r\n\r\n      <ToastContainer autoClose={2000} />\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { store } from 'redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './components/App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}